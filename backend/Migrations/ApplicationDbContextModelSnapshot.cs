// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Candidature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<DateTime>("DateSoumission")
                    .HasColumnType("timestamp with time zone");

                b.Property<int>("OffreDeStageId")
                    .HasColumnType("integer");

                b.Property<string>("Statut")
                    .HasColumnType("text");

                b.Property<int>("UserId")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.HasIndex("OffreDeStageId");

                b.HasIndex("UserId");

                b.ToTable("Candidatures");
            });

            modelBuilder.Entity("backend.Models.Entreprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Adresse")
                    .HasColumnType("text");

                b.Property<string>("EmailContact")
                    .HasColumnType("text");

                b.Property<string>("Nom")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.ToTable("Entreprises");
            });

            modelBuilder.Entity("backend.Models.OffreStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<DateTime>("DatePublication")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("Description")
                    .HasColumnType("text");

                b.Property<int>("EntrepriseId")
                    .HasColumnType("integer");

                b.Property<string>("Titre")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.HasIndex("EntrepriseId");

                b.ToTable("OffresDeStage");
            });

            modelBuilder.Entity("backend.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Nom")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.ToTable("Roles");
            });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Email")
                    .HasColumnType("text");

                b.Property<string>("Nom")
                    .HasColumnType("text");

                b.Property<string>("PasswordHash")
                    .HasColumnType("text");

                b.Property<string>("Role")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("backend.Models.Validation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<int>("CandidatureId")
                    .HasColumnType("integer");

                b.Property<DateTime>("DateValidation")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("Decision")
                    .HasColumnType("text");

                b.Property<int>("EnseignantId")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.HasIndex("CandidatureId");

                b.HasIndex("EnseignantId");

                b.ToTable("Validations");
            });

            // Relations

            modelBuilder.Entity("Candidature", b =>
            {
                b.HasOne("OffreDeStage")
                    .WithMany()
                    .HasForeignKey("OffreDeStageId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("User")
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("OffreDeStage", b =>
            {
                b.HasOne("Entreprise")
                    .WithMany()
                    .HasForeignKey("EntrepriseId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Validation", b =>
            {
                b.HasOne("Candidature")
                    .WithMany()
                    .HasForeignKey("CandidatureId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("User")
                    .WithMany()
                    .HasForeignKey("EnseignantId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}
